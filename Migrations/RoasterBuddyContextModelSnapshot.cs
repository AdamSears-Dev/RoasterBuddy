// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoasterBuddy.Models;

#nullable disable

namespace RoasterBuddy.Migrations
{
    [DbContext(typeof(RoasterBuddyContext))]
    partial class RoasterBuddyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("RoasterBuddy.Models.Client", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("50d1b4ea-fca9-4c61-9863-357d959d6f18"),
                            Address = "123 Main St, Louisville, KY",
                            ContactInformation = "bluegrassbeans@example.com",
                            Name = "Bluegrass Beans"
                        },
                        new
                        {
                            ID = new Guid("9faded71-46eb-477e-9c20-42e38f7e1a6a"),
                            Address = "456 River Rd, Louisville, KY",
                            ContactInformation = "rivercityroasts@example.com",
                            Name = "River City Roasts"
                        },
                        new
                        {
                            ID = new Guid("0d5c991f-8aa3-4bb5-a373-347f4ee2c14a"),
                            Address = "789 Derby Ln, Louisville, KY",
                            ContactInformation = "derbydaycoffee@example.com",
                            Name = "Derby Day Coffee"
                        },
                        new
                        {
                            ID = new Guid("4c2d9120-cf7a-44cc-895b-90a89159a6e5"),
                            Address = "321 Bardstown Rd, Louisville, KY",
                            ContactInformation = "bardstownbrews@example.com",
                            Name = "Bardstown Brews"
                        },
                        new
                        {
                            ID = new Guid("353c78e6-c1f6-40ba-bc4e-405ca76ecb5b"),
                            Address = "654 Southern Pkwy, Louisville, KY",
                            ContactInformation = "southerncomfortcafe@example.com",
                            Name = "Southern Comfort Cafe"
                        },
                        new
                        {
                            ID = new Guid("a7f70ea1-1e9b-40fc-a05a-58c97db1e1ef"),
                            Address = "987 Cherokee Rd, Louisville, KY",
                            ContactInformation = "cherokeeparkperks@example.com",
                            Name = "Cherokee Park Perks"
                        },
                        new
                        {
                            ID = new Guid("36f8ac8b-205d-46bf-8949-260527b1af45"),
                            Address = "135 Churchill Dr, Louisville, KY",
                            ContactInformation = "churchillgrinds@example.com",
                            Name = "Churchill Grinds"
                        },
                        new
                        {
                            ID = new Guid("2a3194d9-91b2-445e-a104-539cfdc05a90"),
                            Address = "246 East Market St, Louisville, KY",
                            ContactInformation = "nulujava@example.com",
                            Name = "NuLu Java"
                        });
                });

            modelBuilder.Entity("RoasterBuddy.Models.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOrdered")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RoasterBuddy.Models.Roast", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoastLevel")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Roasts");
                });

            modelBuilder.Entity("RoasterBuddy.Models.Source", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Farm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("RoasterBuddy.Models.Order", b =>
                {
                    b.HasOne("RoasterBuddy.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
