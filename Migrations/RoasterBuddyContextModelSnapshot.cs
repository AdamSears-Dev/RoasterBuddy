// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoasterBuddy.Models;

#nullable disable

namespace RoasterBuddy.Migrations
{
    [DbContext(typeof(RoasterBuddyContext))]
    partial class RoasterBuddyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("RoasterBuddy.Models.Client", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactInformation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = new Guid("b67f5f89-9d69-49b5-8415-39e4d0819825"),
                            Address = "123 Main St, Louisville, KY",
                            ContactInformation = "bluegrassbeans@example.com",
                            Name = "Bluegrass Beans"
                        },
                        new
                        {
                            ID = new Guid("41913251-fd7e-4db1-8b18-0202f6105ce9"),
                            Address = "456 River Rd, Louisville, KY",
                            ContactInformation = "rivercityroasts@example.com",
                            Name = "River City Roasts"
                        },
                        new
                        {
                            ID = new Guid("6bd92ed2-8924-4c0e-b79e-7aaad8830af2"),
                            Address = "789 Derby Ln, Louisville, KY",
                            ContactInformation = "derbydaycoffee@example.com",
                            Name = "Derby Day Coffee"
                        },
                        new
                        {
                            ID = new Guid("faf98f72-d185-4f91-b7f5-39fcd186df33"),
                            Address = "321 Bardstown Rd, Louisville, KY",
                            ContactInformation = "bardstownbrews@example.com",
                            Name = "Bardstown Brews"
                        },
                        new
                        {
                            ID = new Guid("aac7834f-30ec-4675-b7e4-c653365bcd12"),
                            Address = "654 Southern Pkwy, Louisville, KY",
                            ContactInformation = "southerncomfortcafe@example.com",
                            Name = "Southern Comfort Cafe"
                        },
                        new
                        {
                            ID = new Guid("fe65b1ce-4c01-4282-887d-c59a61950c76"),
                            Address = "987 Cherokee Rd, Louisville, KY",
                            ContactInformation = "cherokeeparkperks@example.com",
                            Name = "Cherokee Park Perks"
                        },
                        new
                        {
                            ID = new Guid("b8e64727-a71a-4d7f-97dd-5ffb8a041244"),
                            Address = "135 Churchill Dr, Louisville, KY",
                            ContactInformation = "churchillgrinds@example.com",
                            Name = "Churchill Grinds"
                        },
                        new
                        {
                            ID = new Guid("2d1a63cf-31ae-453a-b3a8-ff632aa12d55"),
                            Address = "246 East Market St, Louisville, KY",
                            ContactInformation = "nulujava@example.com",
                            Name = "NuLu Java"
                        });
                });

            modelBuilder.Entity("RoasterBuddy.Models.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOrdered")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoastLevel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RoasterBuddy.Models.Roast", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoastLevel")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Roasts");
                });

            modelBuilder.Entity("RoasterBuddy.Models.Source", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Farm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("RoasterBuddy.Models.Order", b =>
                {
                    b.HasOne("RoasterBuddy.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
